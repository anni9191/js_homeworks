//Код: 'number' + 3 + 3
//Результат: 'number33'
//Коментарий: Слово 'number' конкатенируется с числом 3 и превращается в стингу => number3, 
//после, следующее число 3 тоже превращается в стрингу и в результате конкатенации получается 'number33'


//Код: null + 3
//Результат: 3
//Коментарий: Слово 'null' превращается в 0 т к это арифметич операция. 0+3 получается 3.


//Код: 5 && "qwerty"
//Результат: "qwerty"
//Коментарий: Логическое выражение 5 это true, тогда результатом будет 2й операнд "qwerty"


//Код: +'40' + +'2' + "hillel"
//Результат: '42hillel'
//Коментарий: Унарный + превращает 40 и 2 в числа, они суммируются и конкатенируются со словом hillel


//Код: '10' - 5 === 6
//Результат: false 
//Коментарий: 10 становится число и отнимаем число 5, т к число 5 не является числом 6, значит будет ложь 


//Код: true + false
//Результат: 1
//Коментарий: true превращается в 1, false превращается в 0, суммируем эти числа и получаем 1.


//Код: '4px' - 3
//Результат: NaN (not a number)
//Коментарий: '4px' не является числом и соответственно от него мы не можем ничего отнять 


//Код: '4' - 3
//Результат: 1
//Коментарий: 4 явл стрингой и конвертируется в число 4 и после арифметической операции: 4-3 оплучаем 1.


//Код: '6' + 3 ** 0
//Результат: '61'
//Коментарий: 3 возводим в степень 0 и получаем 1, стринга 6 конкатенируется с числом 1.


//Код: 12 / '6'
//Результат: 2
//Коментарий: Число 12 делим на 6 (стринга 6 конвертируется в число 6) 


//Код: '10' + (5 === 6)
//Результат: '10false'
//Коментарий: сначало делаем то выражение, которое в скобках: 5 не равно 6 и получаем false и потом конкатенируем c 10.


//Код: null == ''
//Результат: false
//Коментарий: null может равняться только 0 или андефаинд, а пустая строка не явл 0.

//Код: 3 ** (9 / 3)
//Результат: 27
//Коментарий: начало делаем то выражение, которое в скобках: 9 / 3 и рассчитываем 3 в 3й степени


//Код: !!'false' == !!'true'
//Результат: true
//Коментарий: оператор !! конвертирует выражение в true, поэтому true ==true.


//Код: 0 || '0' && 1
//Результат: 1
//Коментарий: сначало делаем выражение: '0' && 1 и получаем 1, рассчитываем по булиевой логике потом 0 || 1 и получаем 1.


//Код: (+null == false) < 1
//Результат: false
//Коментарий: +null становиться 0, который эквивалентен false, и получаем что false < 1, т е false.


//Код: false && true || true
//Результат: true
//Коментарий: false && true получаем false, a false || true дает нам true.


//Код: false && (false || true)
//Результат: false
//Коментарий: сначало делаем то выражение, которое в скобках: false || true и получаем true, но false && true дает нам false.


//Код: (+null == false) < 1 ** 5
//Результат: true
//Коментарий: сначало делаем то выражение, которое в скобках: +null == false и получаем true, 1 ** 5 получаем 1, и тогда true < 1 дает нам true.


